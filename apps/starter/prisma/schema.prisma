// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户表 - 扩展基础用户模型
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      String   @default("USER") // USER, ADMIN, SUPER_ADMIN
  tenantId  String?
  status    String   @default("active") // active, inactive, suspended
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  // 关联租户
  tenant Tenant? @relation(fields: [tenantId], references: [id])

  @@map("users")
}

// 租户表 - 基于 Console 模块的实体定义
model Tenant {
  id            String   @id @default(cuid())
  name          String
  domain        String?  @unique
  slug          String   @unique
  description   String?
  status        String   @default("active") // active, suspended, deleted, pending
  plan          String   @default("free")   // free, starter, professional, enterprise
  billingCycle  String?  // monthly, yearly
  maxUsers      Int      @default(10)
  maxStorage    BigInt   @default(1073741824) // 1GB in bytes
  settings      String?  // JSON - TenantSettings
  metadata      String?  // JSON - TenantMetadata
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  deletedAt     DateTime?

  // 关联
  users   User[]
  quotas  TenantQuotas?
  plugins TenantPlugin[]

  @@map("tenants")
}

// 插件表
model Plugin {
  id          String   @id @default(cuid())
  name        String
  version     String
  status      String   @default("inactive")
  config      String?  // JSON
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联
  tenants TenantPlugin[]

  @@unique([name, version])
  @@map("plugins")
}

// 租户插件关联表
model TenantPlugin {
  id       String @id @default(cuid())
  tenantId String
  pluginId String
  status   String @default("inactive") // active, inactive
  config   String? // JSON - 租户特定配置  
  installedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  plugin Plugin @relation(fields: [pluginId], references: [id], onDelete: Cascade)

  @@unique([tenantId, pluginId])
  @@map("tenant_plugins")
}

// 租户配额表
model TenantQuotas {
  id               String   @id @default(cuid())
  tenantId         String   @unique
  maxUsers         Int      @default(10)
  currentUsers     Int      @default(0)
  maxStorage       BigInt   @default(1073741824) // 1GB
  currentStorage   BigInt   @default(0)
  maxApiCalls      Int      @default(10000)
  currentApiCalls  Int      @default(0)
  apiResetAt       DateTime?
  maxPlugins       Int      @default(5)
  currentPlugins   Int      @default(0)
  maxSchemas       Int      @default(10)
  currentSchemas   Int      @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@map("tenant_quotas")
}

// 监控数据表
model MonitoringData {
  id        String   @id @default(cuid())
  metric    String
  value     Float
  tags      String?  // JSON
  timestamp DateTime @default(now())
  createdAt DateTime @default(now())

  @@map("monitoring_data")
}