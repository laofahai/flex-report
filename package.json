{
  "name": "linch-kit",
  "private": true,
  "type": "module",
  "description": "AI-First 全栈开发工具包",
  "keywords": [
    "linch-kit",
    "ai-first",
    "typescript",
    "monorepo",
    "trpc",
    "full-stack"
  ],
  "author": "Linch Tech",
  "license": "MIT",
  "homepage": "https://github.com/linch-tech/linch-kit",
  "repository": {
    "type": "git",
    "url": "https://github.com/linch-tech/linch-kit.git"
  },
  "scripts": {
    "linch": "bun packages/core/dist/cli.js",
    "build": "turbo run build",
    "build:packages": "turbo run build:packages --filter='./packages/*'",
    "build:apps": "turbo run build --filter='./apps/*'",
    "build:watch": "turbo run build:packages --filter='./packages/*' --watch",
    "dev": "bun scripts/dev-tools.js dev",
    "dev:apps": "turbo run dev --parallel",
    "dev:packages": "turbo run build:packages --filter='./packages/*' --watch",
    "lint": "turbo run lint",
    "lint:fix": "turbo run lint:fix",
    "format": "turbo run format",
    "format:fix": "turbo run format:fix",
    "check-types": "turbo run check-types",
    "test": "turbo run test --concurrency=1",
    "test:watch": "turbo run test:watch",
    "test:coverage": "turbo run test:coverage",
    "clean": "turbo run clean && rm -rf node_modules/.cache",
    "clean:dist": "turbo run clean:dist",
    "clean:node_modules": "find . -name 'node_modules' -type d -exec rm -rf {} + 2>/dev/null || true",
    "reset": "bun run clean:dist && bun run clean:node_modules && bun install",
    "deps:graph": "bun tools/dev/deps-graph.ts",
    "deps:check": "bun tools/dev/check-reuse.mjs",
    "changeset": "changeset",
    "changeset:version": "changeset version",
    "changeset:publish": "changeset publish",
    "release": "bun scripts/release.js",
    "release:dry": "bun scripts/release.js --dry-run",
    "version": "changeset version && bun install --lockfile-only",
    "ci": "bun install --frozen-lockfile && bun run build && bun run test && bun run lint",
    "prepare": "husky install",
    "setup": "bun scripts/update-all-configs.js && bun install",
    "validate:light": "bun run format:fix && bun run lint:fix",
    "validate": "bun run format:fix && bun run lint:fix && bun run check-types && bun run build:packages && bun run test",
    "validate:ci": "bun run validate",
    "format:check": "prettier --check \"**/*.{ts,tsx,md,json}\"",
    "format:all": "prettier --write \"**/*.{ts,tsx,md,json}\" --ignore-unknown",
    "test:e2e": "playwright test",
    "test:e2e:all": "bun tools/testing/test-e2e-all.ts",
    "ai:session": "bun tools/ai-platform/scripts/session-tools.js",
    "ai:pre-check": "echo 'AI预检查工具 - 需要实现' && exit 1",
    "ai:quality-gate": "echo 'AI质量门禁 - 需要实现' && exit 1",
    "ai:context-verify": "echo 'AI上下文验证 - 需要实现' && exit 1",
    "ai:context-reset": "echo 'AI上下文重置 - 需要实现' && exit 1",
    "ai:context-load": "echo 'AI上下文加载 - 需要实现' && exit 1",
    "ai:capability-check": "echo 'AI能力边界检查 - 需要实现' && exit 1",
    "ai:model-capability-test": "echo 'AI模型能力测试 - 需要实现' && exit 1",
    "ai:model-comparison": "echo 'AI模型对比 - 需要实现' && exit 1",
    "ai:model-performance-report": "echo 'AI模型性能报告 - 需要实现' && exit 1",
    "ai:test-quality-check": "echo 'AI测试质量检查 - 需要实现' && exit 1",
    "conflict:detect-ai-changes": "echo 'AI代码冲突检测 - 需要实现' && exit 1",
    "conflict:style-analysis": "echo '代码风格分析 - 需要实现' && exit 1",
    "conflict:style-unify": "echo '代码风格统一 - 需要实现' && exit 1",
    "quality:dashboard": "echo '质量监控大盘 - 需要实现' && exit 1",
    "quality:report": "echo '质量报告生成 - 需要实现' && exit 1",
    "quality:trend-analysis": "echo '质量趋势分析 - 需要实现' && exit 1",
    "quality:regression-check": "echo '质量回归检查 - 需要实现' && exit 1",
    "emergency:activate": "echo '应急模式激活 - 需要实现' && exit 1",
    "emergency:assess-damage": "echo '损失评估 - 需要实现' && exit 1",
    "emergency:rollback-stable": "echo '回滚稳定版本 - 需要实现' && exit 1",
    "emergency:enable-backup": "echo '启用备用系统 - 需要实现' && exit 1",
    "emergency:notify-team": "echo '通知团队 - 需要实现' && exit 1",
    "emergency:manual-review": "echo '人工审查模式 - 需要实现' && exit 1",
    "emergency:restore-normal": "echo '恢复正常流程 - 需要实现' && exit 1",
    "test:mutation": "echo '变异测试 - 需要实现' && exit 1",
    "validate:strict": "tsc --noEmit && eslint . --max-warnings=0 && bun test --coverage",
    "compliance:source-check": "echo '代码来源检查 - 需要实现' && exit 1",
    "compliance:copyright-scan": "echo '版权扫描 - 需要实现' && exit 1",
    "compliance:license-verify": "echo '许可证验证 - 需要实现' && exit 1",
    "debt:scan": "echo '技术债务扫描 - 需要实现' && exit 1",
    "debt:ai-specific": "echo 'AI特有问题检测 - 需要实现' && exit 1",
    "knowledge:add-failure-case": "echo '添加失败案例 - 需要实现' && exit 1",
    "knowledge:add-success-pattern": "echo '添加成功模式 - 需要实现' && exit 1",
    "knowledge:search": "echo '知识库搜索 - 需要实现' && exit 1",
    "knowledge:generate-report": "echo '生成知识报告 - 需要实现' && exit 1",
    "backup:daily": "echo '每日备份 - 需要实现' && exit 1",
    "backup:milestone": "echo '里程碑备份 - 需要实现' && exit 1",
    "backup:config": "echo '配置备份 - 需要实现' && exit 1",
    "backup:lockfile": "echo '锁文件备份 - 需要实现' && exit 1",
    "monitor:system": "echo '系统监控 - 需要实现' && exit 1",
    "monitor:quality": "echo '质量监控 - 需要实现' && exit 1",
    "monitor:performance": "echo '性能监控 - 需要实现' && exit 1",
    "monitor:set-alerts": "echo '设置预警 - 需要实现' && exit 1",
    "health:system": "echo '系统健康检查 - 需要实现' && exit 1",
    "health:dependencies": "echo '依赖健康检查 - 需要实现' && exit 1",
    "health:config": "echo '配置健康检查 - 需要实现' && exit 1",
    "health:report": "echo '健康报告 - 需要实现' && exit 1",
    "recovery:check-code-integrity": "echo '代码完整性检查 - 需要实现' && exit 1",
    "recovery:check-config-integrity": "echo '配置完整性检查 - 需要实现' && exit 1",
    "recovery:check-dependencies": "echo '依赖完整性检查 - 需要实现' && exit 1",
    "diagnostic:system": "echo '系统诊断 - 需要实现' && exit 1",
    "diagnostic:dependencies": "echo '依赖诊断 - 需要实现' && exit 1",
    "diagnostic:config": "echo '配置诊断 - 需要实现' && exit 1",
    "diagnostic:environment": "echo '环境诊断 - 需要实现' && exit 1",
    "logs:analyze-errors": "echo '错误日志分析 - 需要实现' && exit 1",
    "logs:analyze-performance": "echo '性能日志分析 - 需要实现' && exit 1",
    "logs:analyze-build": "echo '构建日志分析 - 需要实现' && exit 1",
    "logs:generate-diagnostic-report": "echo '生成诊断报告 - 需要实现' && exit 1"
  },
  "devDependencies": {
    "@changesets/changelog-github": "^0.5.1",
    "@changesets/cli": "^2.29.5",
    "@eslint/js": "^9.30.0",
    "@next/eslint-plugin-next": "^15.3.5",
    "@playwright/test": "^1.53.2",
    "@types/lodash-es": "^4.17.12",
    "@typescript-eslint/eslint-plugin": "^8.35.0",
    "@typescript-eslint/parser": "^8.35.0",
    "chokidar": "^4.0.3",
    "eslint": "^9.30.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "jest": "^30.0.3",
    "lint-staged": "^16.1.2",
    "prettier": "^3.6.2",
    "tsup": "^8.5.0",
    "turbo": "^2.5.4",
    "typescript": "5.8.3"
  },
  "packageManager": "bun@1.2.18",
  "engines": {
    "node": ">=18",
    "bun": ">=1.0"
  },
  "lint-staged": {
    "**/*.{ts,tsx,js,jsx}": [
      "prettier --write",
      "eslint --fix"
    ],
    "**/*.{md,json}": "prettier --write"
  },
  "dependencies": {
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "dayjs": "^1.11.13"
  },
  "workspaces": [
    "apps/*",
    "packages/*",
    "extensions/*",
    "tools/*"
  ],
  "trustedDependencies": [
    "@tailwindcss/oxide",
    "protobufjs",
    "unrs-resolver"
  ]
}
