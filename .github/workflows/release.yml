name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build packages
        run: bun run build:packages

      - name: Run tests
        run: bun test

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: bun run changeset publish
          version: bun run changeset version
          commit: 'chore: release packages'
          title: 'chore: release packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          name: Release v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          body: |
            ## Released Packages
            
            ${{ steps.changesets.outputs.publishedPackages }}
            
            ## What's Changed
            
            This release includes updates to the LinchKit packages with bug fixes and enhancements.
            
            See the [changelog](https://github.com/laofahai/linch-kit/blob/main/CHANGELOG.md) for detailed information.
          draft: false
          prerelease: false

  # 发布到 GitHub Packages
  publish-github:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: [release]
    if: needs.release.outputs.published == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build packages
        run: bun run build:packages

      - name: Publish to GitHub Packages
        run: |
          # 更新 package.json 中的 registry
          find packages -name "package.json" -exec sed -i 's/"registry": ".*"/"registry": "https:\/\/npm.pkg.github.com"/g' {} \;
          
          # 发布到 GitHub Packages
          bun run -r publish --registry https://npm.pkg.github.com --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

  # 部署到 Vercel (所有应用)
  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [release]
    if: always() && needs.release.result == 'success'
    strategy:
      matrix:
        app:
          - name: starter
            directory: ./apps/starter
            project-id: VERCEL_STARTER_PROJECT_ID
          - name: demo-app
            directory: ./apps/demo-app
            project-id: VERCEL_DEMO_PROJECT_ID
          - name: website
            directory: ./apps/website
            project-id: VERCEL_WEBSITE_PROJECT_ID
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build packages  
        run: bun run build:packages

      - name: Deploy ${{ matrix.app.name }} to Vercel
        if: ${{ vars.VERCEL_ENABLED == 'true' }}
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets[matrix.app.project-id] }}
          working-directory: ${{ matrix.app.directory }}
